name: pioms

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Install envsubst
        run: sudo apt-get install -y gettext

      - name: Create application.yml.template
        run: |
          mkdir -p src/main/resources
          cat > src/main/resources/application.yml.template <<EOL
          server:
            port: 9000
            tomcat:
              uri-encoding: UTF-8
          spring:
            application:
              name: pioms
            jpa:
              show-sql: false
              database: mysql
              properties:
                hibernate:
                  format_sql: true
              database-platform: org.hibernate.dialect.MySQL8Dialect
              generate-ddl: false
            datasource:
              driver-class-name: org.mariadb.jdbc.Driver
              url: \${DB_URL}
              username: \${DB_USERNAME}
              password: \${DB_PASSWORD}
          EOL

      - name: Set Yaml
        run: |
          envsubst < src/main/resources/application.yml.template > src/main/resources/application.yml
          cat src/main/resources/application.yml
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: Check for Tests
        run: |
          if git diff --name-only HEAD^ HEAD | grep -qvE '(\.xml$|\.yml$|config/)'; then
            if [ -z "$(find src/test -name '*ServiceTest.java')" ]; then
              echo "No ServiceTest found, failing the build."
              exit 1
            fi
          else
            echo "Only configuration files changed, skipping test check."
          fi

      - name: Build with Gradle
        run: ./gradlew clean build
        shell: bash

      - name: Run Service Tests
        run: ./gradlew test --tests "*ServiceTest" --stacktrace --info
        shell: bash

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Show Current Time
        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"
        shell: bash

#      - name: ChatGPT codeReviewer
#        uses: anc95/ChatGPT-CodeReview@v1.0.13
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
#          LANGUAGE: Korean
#          OPENAI_API_ENDPOINT: https://api.openai.com/v1
#          MODEL: gpt-3.5-turbo
#          PROMPT: 코드를 검토하고 문제가 있는 부분이나 개선할 점을 알려주세요.
#          top_p: 1
#          temperature: 1
#          max_tokens: 10000
#          MAX_PATCH_LENGTH: 10000

  check-comments:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      - name: Check Pull Request Comments
        id: pr-comments
        run: | 
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          COMMENTS=$(gh pr view $PR_NUMBER --json comments --jq '.comments')
          
          # Extract unique user logins from comments
          UNIQUE_USERS=$(echo "$COMMENTS" | jq -r 'map(.author.login) | unique | length')
          
          if [ $UNIQUE_USERS -lt 2 ]; then
            echo "Not enough unique users ($UNIQUE_USERS) in the pull request comments. At least 2 unique users are required."
            exit 1
          else
            echo "Sufficient unique users ($UNIQUE_USERS) in the pull request comments."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
